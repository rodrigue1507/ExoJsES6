{"version":3,"sources":["../es2015/src/iterator.js"],"names":["toIterable","Iterable","iteratorFactory","Symbol","iterator","Iterator","onNext","next","IteratorResult","value","done","obj","keysProperties","Object","keys","valuesProperties","values","Done","index","length","Map","set"],"mappings":";;;;;;;;;QA0BgBA,U,GAAAA,U;;AA1BhB;;;;IAEaC,Q,WAAAA,Q,GACT,kBAAYC,eAAZ,EAA6B;AAAA;;AAAA,0CACLA,eADK;;AACxBC,WAAOC,QADiB;AAE5B,C;;IAGQC,Q,WAAAA,Q,GACT,kBAAYC,MAAZ,EAAoB;AAAA;;AAChB,SAAKC,IAAL,GAAYD,MAAZ;AACH,C;;IAIQE,c,WAAAA,c,GACT,wBAAYC,KAAZ,EAAmBC,IAAnB,EAAyB;AAAA;;AACrB,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACH,C;;AAGL;;;;;;AAIO,SAASV,UAAT,CAAoBW,GAApB,EAAyB;AAC5BA,QAAIR,OAAOC,QAAX,IAAuB,YAAM;AACzB,YAAIQ,iBAAiBC,OAAOC,IAAP,CAAYH,GAAZ,CAArB;AACA,YAAII,mBAAmBF,OAAOG,MAAP,CAAcL,GAAd,CAAvB;AACA,YAAIM,OAAO,KAAX;AACA,YAAIC,QAAQ,CAAZ;AACA,eAAO;AACHX,kBAAM,gBAAM;AACRU,uBAAQC,SAASN,eAAeO,MAAhC;AACA,oBAAIR,MAAM;AACPD,0BAAOO,IADA;AAEPR,2BAAQ,IAAIW,GAAJ,GAAUC,GAAV,CAAcT,eAAeM,KAAf,CAAd,EAAoCH,iBAAiBG,KAAjB,CAApC;AAFD,iBAAV;AAIAA;AACA,uBAAOP,GAAP;AACH;AATE,SAAP;AAWH,KAhBD;AAiBH","file":"iterator.js","sourceRoot":"es2015","sourcesContent":["import { map } from \"rxjs/operator/map\";\r\n\r\nexport class Iterable {\r\n    constructor(iteratorFactory) {\r\n        [Symbol.iterator] = iteratorFactory;\r\n    }\r\n}\r\n\r\nexport class Iterator {\r\n    constructor(onNext) {\r\n        this.next = onNext\r\n    }\r\n    \r\n}\r\n\r\nexport class IteratorResult {\r\n    constructor(value, done) {\r\n        this.value = value;\r\n        this.done = done;\r\n    }\r\n}\r\n\r\n/**\r\n * Rendre les propriétés d'un objet iterables\r\n * S'aider de la fonction Object.keys\r\n */\r\nexport function toIterable(obj) {\r\n    obj[Symbol.iterator] = () => {\r\n        let keysProperties = Object.keys(obj);\r\n        let valuesProperties = Object.values(obj);\r\n        let Done = false;\r\n        let index = 0;\r\n        return {\r\n            next: () => {\r\n                Done = (index >= keysProperties.length);\r\n                let obj = {\r\n                   done : Done,\r\n                   value : new Map().set(keysProperties[index],valuesProperties[index])\r\n                };\r\n                index++;\r\n                return obj;\r\n            }\r\n        };\r\n    };\r\n}"]}