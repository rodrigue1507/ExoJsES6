{"version":3,"sources":["../es2015/src/iterator.spec.js"],"names":["describe","it","done","obj","a","b","c","d","e","props","Symbol","iterator","toStringTag","length","Object","keys","prop","key","undefined","value","hasOwnProperty","iterationResult","IteratorResult","end","values","Math","floor","random","i","Iterator","next"],"mappings":";;AAAA;;AACA;;;;AAEAA,SAAS,gBAAT,EAA2B,YAAM;AAC7BC,OAAG,iBAAH,EAAsB,UAACC,IAAD,EAAU;AAC5B,YAAIC,MAAM;AACNC,eAAG,CADG;AAENC,eAAG,GAFG;AAGNC,eAAG,IAHG;AAINC,eAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJG;AAKNC,eAAG,aAAM,CAAE;AALL,SAAV;;AAQA,mCAAWL,GAAX;AACA,YAAIM,qCAAYN,GAAZ,EAAJ;AACA,YAAIF,KAAKE,IAAIO,OAAOC,QAAX,GAAT;;AAEA,0BACIV,GAAGS,OAAOE,WAAV,MAA2B,WAD/B,EAEI,kCAFJ;AAIA,0BACIH,MAAMI,MAAN,KAAiBC,OAAOC,IAAP,CAAYZ,GAAZ,EAAiBU,MADtC,qCAEqCC,OAAOC,IAAP,CAAYZ,GAAZ,EAAiBU,MAFtD;;AAjB4B;AAAA;AAAA;;AAAA;AAsB5B,iCAAiBV,GAAjB,8HAAsB;AAAA,oBAAba,IAAa;;AAClB,kCACIA,KAAKC,GAAL,IAAYC,SAAZ,IAAyBF,KAAKG,KAAL,IAAcD,SAD3C,EAEI,gDAFJ;AAIA,kCACIf,IAAIiB,cAAJ,CAAmBJ,KAAKC,GAAxB,CADJ,qBAEqBD,KAAKC,GAF1B;AAIA,kCACID,KAAKG,KAAL,KAAehB,IAAIa,KAAKC,GAAT,CADnB,qBAEqBD,KAAKC,GAF1B,8BAEsDd,IAAIa,KAAKC,GAAT,CAFtD;AAIH;AAnC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoC5Bf;AACH,KArCD;;AAuCAD,OAAG,2BAAH,EAAgC,UAACC,IAAD,EAAU;AACtC,YAAImB,kBAAkB,IAAIC,yBAAJ,CAAmB,CAAnB,EAAsB,KAAtB,CAAtB;AACA,0BACID,gBAAgBF,KAAhB,KAA0B,CAD9B,EAEI,6CAFJ;;AAKA,0BACIE,gBAAgBnB,IAAhB,KAAyB,KAD7B,EAEI,gDAFJ;AAIAA;AACH,KAZD;;AAcAD,OAAG,qBAAH,EAA0B,UAACsB,GAAD,EAAS;AAC/B,YAAIC,SAAS,CACVC,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAgB,GAAjB,GAAwB,CAAnC,CADU,EAEVF,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAgB,GAAjB,GAAwB,CAAnC,CAFU,EAGVF,KAAKC,KAAL,CAAYD,KAAKE,MAAL,KAAgB,GAAjB,GAAwB,CAAnC,CAHU,CAAb;AAKA,YAAIC,IAAI,CAAR;AACA,YAAIjB,WAAW,IAAIkB,mBAAJ,CAAa,YAAM;AAC9B,gBAAID,IAAIJ,OAAOX,MAAf,EAAuB;AACnB,uBAAOW,OAAOI,GAAP,CAAP;AACH;AACJ,SAJc,CAAf;;AAMA,0BACI,OAAOjB,SAASmB,IAAhB,KAAyB,UAD7B,EAEI,gDAFJ;;AAKA,YAAIT,kBAAkBV,SAASmB,IAAT,EAAtB;AACA,0BACKT,gBAAgBF,KAAhB,KAA0BK,OAAO,CAAP,CAA1B,IAAuCH,gBAAgBnB,IAAhB,KAAyB,KADrE,gDAEiDsB,OAAO,CAAP,CAFjD;AAIAH,0BAAkBV,SAASmB,IAAT,EAAlB;AACA,0BACKT,gBAAgBF,KAAhB,KAA0BK,OAAO,CAAP,CAA1B,IAAuCH,gBAAgBnB,IAAhB,KAAyB,KADrE,iDAEkDsB,OAAO,CAAP,CAFlD;AAIAH,0BAAkBV,SAASmB,IAAT,EAAlB;AACA,0BACKT,gBAAgBF,KAAhB,KAA0BK,OAAO,CAAP,CAA1B,IAAuCH,gBAAgBnB,IAAhB,KAAyB,KADrE,gDAEiDsB,OAAO,CAAP,CAFjD;AAIAH,0BAAkBV,SAASmB,IAAT,EAAlB;AACA,0BACKT,gBAAgBF,KAAhB,KAA0BD,SAA1B,IAAuCG,gBAAgBnB,IAAhB,KAAyB,IADrE;AAIAqB;AACH,KAvCD;AAwCH,CA9FD","file":"iterator.spec.js","sourceRoot":"es2015","sourcesContent":["import { assert, expect, should } from \"chai\";\r\nimport { Iterable, Iterator, IteratorResult, toIterable } from './iterator';\r\n\r\ndescribe(\"Iterator Tests\", () => {\r\n    it(\"toIterable test\", (done) => {\r\n        let obj = {\r\n            a: 1,\r\n            b: \"a\",\r\n            c: true,\r\n            d: [1, 2, 3],\r\n            e: () => {}\r\n        };\r\n\r\n        toIterable(obj);\r\n        let props = [...obj];\r\n        let it = obj[Symbol.iterator]();\r\n        \r\n        assert(\r\n            it[Symbol.toStringTag] !== \"Generator\", \r\n            \"The iterator must be hand coded!\"\r\n        );\r\n        assert(\r\n            props.length === Object.keys(obj).length, \r\n            `the properties length must be ${Object.keys(obj).length}`\r\n        );\r\n        \r\n        for (let prop of obj) {\r\n            assert( \r\n                prop.key != undefined && prop.value != undefined,\r\n                'The iteration value must be a key/value object'\r\n            );\r\n            assert(\r\n                obj.hasOwnProperty(prop.key),\r\n                `the property '${prop.key}' does not exists on the object`\r\n            );\r\n            assert(\r\n                prop.value === obj[prop.key],\r\n                `the property '${prop.key}' must have the value ${obj[prop.key]}` \r\n            );\r\n        }\r\n        done();\r\n    });\r\n\r\n    it(\"IteratorResult class test\", (done) => {\r\n        let iterationResult = new IteratorResult(1, false);\r\n        assert(\r\n            iterationResult.value === 1,\r\n            \"The IteratorResult value property must be 1\"\r\n        );\r\n\r\n        assert(\r\n            iterationResult.done === false,\r\n            \"The IteratorResult done property must be false\"\r\n        );\r\n        done();\r\n    });\r\n\r\n    it(\"Iterator class test\", (end) => {\r\n        let values = [ \r\n           Math.floor((Math.random() * 100) + 1), \r\n           Math.floor((Math.random() * 100) + 1),\r\n           Math.floor((Math.random() * 100) + 1)\r\n        ];\r\n        let i = 0;\r\n        let iterator = new Iterator(() => {\r\n            if (i < values.length) {\r\n                return values[i++];\r\n            }\r\n        });\r\n\r\n        assert(\r\n            typeof iterator.next === 'function',\r\n            \"The Iterator next property must be  a function\"\r\n        );\r\n\r\n        let iterationResult = iterator.next();\r\n        assert(\r\n             iterationResult.value === values[0] && iterationResult.done === false,\r\n             `The first iteration result value must be ${values[0]} and must not be done`\r\n        );\r\n        iterationResult = iterator.next();\r\n        assert(\r\n             iterationResult.value === values[1] && iterationResult.done === false,\r\n             `The second iteration result value must be ${values[1]} and must not be done`\r\n        );\r\n        iterationResult = iterator.next();\r\n        assert(\r\n             iterationResult.value === values[2] && iterationResult.done === false,\r\n             `The third iteration result value must be ${values[2]} and must not be done`\r\n        );\r\n        iterationResult = iterator.next(); \r\n        assert(\r\n             iterationResult.value === undefined && iterationResult.done === true,\r\n             `The last iteration result value must be undefined and must be done`\r\n        );\r\n        end();\r\n    });\r\n});"]}