{"version":3,"sources":["../es2015/src/map.js"],"names":["TextIndexer","map","Map","text","reg","textTab","replace","split","forEach","lowElement","element","toLowerCase","has","set","valIncrement","get","word","lowWord","size"],"mappings":";;;;;;;;;;AACA;;;;IAIaA,W,WAAAA,W;AACT,2BAAc;AAAA;;AACV,aAAKC,GAAL,GAAW,IAAIC,GAAJ,EAAX;AACH;;AAED;;;;;;;;;;kCAMUC,I,EAAM;AAAA;;AACd,gBAAMC,MAAM,+EAAZ;AACA,gBAAMC,UAAUF,KAAKG,OAAL,CAAaF,GAAb,EAAiB,GAAjB,EAAsBG,KAAtB,CAA4B,GAA5B,CAAhB;AACAF,oBAAQG,OAAR,CAAgB,mBAAW;AACzB,oBAAIC,aAAaC,QAAQC,WAAR,EAAjB;AACA,oBAAG,CAAC,MAAKV,GAAL,CAASW,GAAT,CAAaH,UAAb,CAAJ,EAA6B;AACzB,0BAAKR,GAAL,CAASY,GAAT,CAAaJ,UAAb,EAAwB,CAAxB;AACH,iBAFD,MAGI;AACD,wBAAIK,eAAe,MAAKb,GAAL,CAASc,GAAT,CAAaN,UAAb,IAA2B,CAA9C;AACA,0BAAKR,GAAL,CAASY,GAAT,CAAaJ,UAAb,EAAwBK,YAAxB;AACF;AACF,aATD;AAWD;;AAED;;;;;;kCAGUE,I,EAAM;AACZ,gBAAIC,UAAUD,KAAKL,WAAL,EAAd;AACA,mBAAO,KAAKV,GAAL,CAASc,GAAT,CAAaE,OAAb,CAAP;AACH;;AAED;;;;;;4BAGW;AACP,mBAAO,KAAKhB,GAAL,CAASiB,IAAhB;AACH","file":"map.js","sourceRoot":"es2015","sourcesContent":["\r\n/**\r\n * La classe TextIndexer permet d'indexer du text via la méthode indexText\r\n * \r\n */\r\nexport class TextIndexer {\r\n    constructor() {\r\n        this.map = new Map();\r\n    }\r\n\r\n    /**\r\n     * Permet d'indexer du texte. Chaque mot doit être rangé dans un Map.\r\n     * Le map doit contenir tous les mots rencontrés associé au nombre de fois que le mot à été rencontré dans le texte.\r\n     * Les fonctions String.split() et String.replace vous serons utiles !\r\n     * @param text Le texte source à indexer\r\n     */\r\n    indexText(text) {\r\n      const reg = /[^a-zA-Z0-9áàâäãåçéèêëíìîïñóòôöõúùûüýÿæœÁÀÂÄÃÅÇÉÈÊËÍÌÎÏÑÓÒÔÖÕÚÙÛÜÝŸÆŒ_-\\s]+/gi;     \r\n      const textTab = text.replace(reg,\" \").split(\" \");\r\n      textTab.forEach(element => {\r\n        let lowElement = element.toLowerCase();\r\n        if(!this.map.has(lowElement)){\r\n            this.map.set(lowElement,1);\r\n        }\r\n        else{\r\n           let valIncrement = this.map.get(lowElement) + 1;\r\n           this.map.set(lowElement,valIncrement);\r\n        }\r\n      });\r\n        \r\n    }\r\n\r\n    /**\r\n     * Le poids d'un mot correspond au nombre de fois qu'il à été rencontré dans le texte.\r\n     */\r\n    getWeight(word) {\r\n        let lowWord = word.toLowerCase();\r\n        return this.map.get(lowWord);\r\n    }\r\n\r\n    /**\r\n     * retourne le nombre de mots indexés\r\n     */\r\n    get count(){\r\n        return this.map.size;\r\n    }\r\n}\r\n\r\n"]}